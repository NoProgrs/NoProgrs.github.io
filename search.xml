<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[JavaScript 遍历方法]]></title>
      <url>/2017/10/14/JavaScript-%E9%81%8D%E5%8E%86%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""><br> JavaScript 遍历方法<br><a id="more"></a></excerpt></p>
<ul>
<li><p>1、forEach:返回值 1 数组的信息 2 数组的下标索引 没有办法终止循环 但是可以根据情况抛出一个错误 具体方法如下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> arr = [<span class="string">'abc'</span>, <span class="string">'bcd'</span>, <span class="string">'cde'</span>]</div><div class="line"></div><div class="line">  arr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">element, index</span>) </span>&#123;</div><div class="line">      <span class="built_in">console</span>.log(element);</div><div class="line">      <span class="built_in">console</span>.log(index);</div><div class="line">  &#125;);</div></pre></td></tr></table></figure>
</li>
<li><p>实现原理</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Array</span>.prototype.myforEach = <span class="function"><span class="keyword">function</span>(<span class="params">fn</span>) </span>&#123;</div><div class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.length; i++) &#123;</div><div class="line">          fn(<span class="keyword">this</span>[i], i)</div><div class="line">      &#125;;</div><div class="line">  &#125;</div><div class="line">  arr.myforEach(<span class="function"><span class="keyword">function</span>(<span class="params">element, index</span>) </span>&#123;</div><div class="line">      <span class="built_in">console</span>.log(element);</div><div class="line">      <span class="built_in">console</span>.log(index);</div><div class="line">  &#125;);</div></pre></td></tr></table></figure>
</li>
<li><p>2、some:根据一个条件验证数组中是佛有该元素 true false 如果函数的返回值为true那么停止遍历some的返回值为true如果知道遍历结果结束都没有条件为true那么返回false</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> arr = [<span class="string">'abc'</span>, <span class="string">'bcd'</span>, <span class="string">'cde'</span>]</div><div class="line"><span class="keyword">var</span> bool = arr.some(<span class="function"><span class="keyword">function</span>(<span class="params">element,index</span>) </span>&#123;</div><div class="line">      <span class="built_in">console</span>.log(index);</div><div class="line">      <span class="keyword">return</span> element === <span class="string">'abc'</span></div><div class="line">  &#125;)</div><div class="line">  <span class="built_in">console</span>.log(bool)</div></pre></td></tr></table></figure>
</li>
<li><p>3、every:验证数组的所有是否满足一个条件 返回的值也是true和false</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> arr = [<span class="string">'abc'</span>, <span class="string">'bcd'</span>, <span class="string">'cde'</span>]</div><div class="line">   <span class="keyword">var</span> rets = arr.every(<span class="function"><span class="keyword">function</span> (<span class="params">element,index</span>) </span>&#123;</div><div class="line">      <span class="keyword">return</span> element.length === <span class="number">3</span></div><div class="line">   &#125;)</div><div class="line">   <span class="built_in">console</span>.log(rets);</div></pre></td></tr></table></figure>
</li>
<li><p>4、find:找到数组中符合条件的第一个元素 和find方法一样</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">  <span class="keyword">var</span> user = [</div><div class="line">   &#123;<span class="attr">name</span>:<span class="string">'张三'</span>,<span class="attr">age</span>:<span class="number">15</span>&#125;,</div><div class="line">   &#123;<span class="attr">name</span>:<span class="string">'张三'</span>,<span class="attr">age</span>:<span class="number">16</span>&#125;,</div><div class="line">   &#123;<span class="attr">name</span>:<span class="string">'张三'</span>,<span class="attr">age</span>:<span class="number">12</span>&#125;,</div><div class="line">   &#123;<span class="attr">name</span>:<span class="string">'张三'</span>,<span class="attr">age</span>:<span class="number">12</span>&#125;,</div><div class="line">   &#123;<span class="attr">name</span>:<span class="string">'张三'</span>,<span class="attr">age</span>:<span class="number">11</span>&#125;,</div><div class="line">   &#123;<span class="attr">name</span>:<span class="string">'张三'</span>,<span class="attr">age</span>:<span class="number">19</span>&#125;</div><div class="line">]</div><div class="line"><span class="keyword">var</span> result = user.find(<span class="function"><span class="keyword">function</span> (<span class="params">element,index</span>) </span>&#123;</div><div class="line">   <span class="keyword">return</span> element.age &gt;= <span class="number">15</span></div><div class="line">&#125;)</div><div class="line"><span class="built_in">console</span>.log(result);</div></pre></td></tr></table></figure>
</li>
<li><p>5、findIndex:找到数组中符合条件的第一个元素的下标</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">  <span class="keyword">var</span> user = [</div><div class="line">   &#123;<span class="attr">name</span>:<span class="string">'张三'</span>,<span class="attr">age</span>:<span class="number">15</span>&#125;,</div><div class="line">   &#123;<span class="attr">name</span>:<span class="string">'张三'</span>,<span class="attr">age</span>:<span class="number">16</span>&#125;,</div><div class="line">   &#123;<span class="attr">name</span>:<span class="string">'张三'</span>,<span class="attr">age</span>:<span class="number">12</span>&#125;,</div><div class="line">   &#123;<span class="attr">name</span>:<span class="string">'张三'</span>,<span class="attr">age</span>:<span class="number">12</span>&#125;,</div><div class="line">   &#123;<span class="attr">name</span>:<span class="string">'张三'</span>,<span class="attr">age</span>:<span class="number">11</span>&#125;,</div><div class="line">   &#123;<span class="attr">name</span>:<span class="string">'张三'</span>,<span class="attr">age</span>:<span class="number">19</span>&#125;</div><div class="line">]</div><div class="line"><span class="keyword">var</span> results = user.findIndex(<span class="function"><span class="keyword">function</span> (<span class="params">element,index</span>) </span>&#123;</div><div class="line">   <span class="keyword">return</span> element.age &gt;= <span class="number">15</span></div><div class="line">&#125;)</div><div class="line"><span class="built_in">console</span>.log(results);</div></pre></td></tr></table></figure>
</li>
<li><p>6、filter:找到所有符合条件的元素然后放到一个数组中 如果没有符合条件的那么返回空数组</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">  <span class="keyword">var</span> user = [</div><div class="line">    &#123;<span class="attr">name</span>:<span class="string">'张三'</span>,<span class="attr">age</span>:<span class="number">15</span>&#125;,</div><div class="line">    &#123;<span class="attr">name</span>:<span class="string">'张三'</span>,<span class="attr">age</span>:<span class="number">16</span>&#125;,</div><div class="line">    &#123;<span class="attr">name</span>:<span class="string">'张三'</span>,<span class="attr">age</span>:<span class="number">12</span>&#125;,</div><div class="line">    &#123;<span class="attr">name</span>:<span class="string">'张三'</span>,<span class="attr">age</span>:<span class="number">12</span>&#125;,</div><div class="line">    &#123;<span class="attr">name</span>:<span class="string">'张三'</span>,<span class="attr">age</span>:<span class="number">11</span>&#125;,</div><div class="line">    &#123;<span class="attr">name</span>:<span class="string">'张三'</span>,<span class="attr">age</span>:<span class="number">19</span>&#125;</div><div class="line"> ]</div><div class="line"><span class="keyword">var</span> sameAge = user.filter(<span class="function"><span class="keyword">function</span>(<span class="params">element,index</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> element.age &gt;= <span class="number">15</span></div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(sameAge);</div></pre></td></tr></table></figure>
</li>
<li><p>7、map:对所有的元素进行操作</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//值类型</span></div><div class="line"><span class="keyword">var</span> arr2 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</div><div class="line"><span class="keyword">var</span> After = arr2.map(<span class="function"><span class="keyword">function</span> (<span class="params">element,index</span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> ++element</div><div class="line">&#125;)</div><div class="line"><span class="built_in">console</span>.log(After)</div><div class="line">[javascript] view plain copy</div><div class="line"><span class="comment">// 复杂数据类型</span></div><div class="line"><span class="keyword">var</span> user = [</div><div class="line">    &#123;<span class="attr">name</span>:<span class="string">'张三'</span>,<span class="attr">age</span>:<span class="number">15</span>&#125;,</div><div class="line">    &#123;<span class="attr">name</span>:<span class="string">'张三'</span>,<span class="attr">age</span>:<span class="number">16</span>&#125;,</div><div class="line">    &#123;<span class="attr">name</span>:<span class="string">'张三'</span>,<span class="attr">age</span>:<span class="number">12</span>&#125;,</div><div class="line">    &#123;<span class="attr">name</span>:<span class="string">'张三'</span>,<span class="attr">age</span>:<span class="number">12</span>&#125;,</div><div class="line">    &#123;<span class="attr">name</span>:<span class="string">'张三'</span>,<span class="attr">age</span>:<span class="number">11</span>&#125;,</div><div class="line">    &#123;<span class="attr">name</span>:<span class="string">'张三'</span>,<span class="attr">age</span>:<span class="number">19</span>&#125;</div><div class="line"> ]</div><div class="line"><span class="keyword">var</span> age = user.map(<span class="function"><span class="keyword">function</span> (<span class="params">element,index</span>) </span>&#123;</div><div class="line"> element.age++</div><div class="line"> <span class="keyword">return</span> element</div><div class="line">&#125;)</div><div class="line"><span class="built_in">console</span>.log(age);</div><div class="line"><span class="built_in">console</span>.log(user);</div><div class="line"><span class="comment">// 这时候原来的user和现在的user是一样的 如果想要不影响原来的user那么就需要</span></div><div class="line"><span class="comment">// 进行深拷贝  extend方法</span></div></pre></td></tr></table></figure>
</li>
<li><p>8、includes</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span>  arr3 = [<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">5</span>]</div><div class="line"><span class="keyword">var</span> has = arr3.includes(<span class="number">3</span>)</div><div class="line"><span class="built_in">console</span>.log(has)</div><div class="line"></div><div class="line"><span class="comment">// user.includes(&#123;name:'张三',age:11&#125;)  这样是不可以的</span></div><div class="line"><span class="comment">// 比较的是引用而不是具体的值</span></div><div class="line"><span class="keyword">var</span> zs = user[<span class="number">2</span>]</div><div class="line"><span class="keyword">var</span> have = user.includes(zs)</div><div class="line"><span class="built_in">console</span>.log(have);</div></pre></td></tr></table></figure>
</li>
<li><p>9、reduce方法的原理和解析 这个是数组遍历最重要的方法</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">  <span class="comment">/**</span></div><div class="line"><span class="comment"> *  reduce()</span></div><div class="line"><span class="comment"> *  用来做数组的累积</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</div><div class="line"></div><div class="line"><span class="comment">// es5写法</span></div><div class="line"><span class="keyword">var</span> result = arr.reduce(<span class="function"><span class="keyword">function</span>(<span class="params">prev, curr</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> prev + curr</div><div class="line">&#125;)</div><div class="line"><span class="built_in">console</span>.log(result)</div><div class="line"></div><div class="line"><span class="comment">// es6写法</span></div><div class="line"><span class="keyword">var</span> ret = arr.reduce(<span class="function">(<span class="params">prev, curr</span>) =&gt;</span> prev + curr)</div><div class="line"><span class="built_in">console</span>.log(ret)</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>分析</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 分析</span></div><div class="line"><span class="comment">// reduce是可以有第二个参数的</span></div><div class="line"><span class="comment">// 如果第二个参数存在那么prev的初始值九尾第二个参数的值 多遍历了一次  5</span></div><div class="line"><span class="comment">// 如果不存在初始值那么prev的初始值就为arr[0]  4</span></div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> *  分析：首先我们 console.log(prev, curr);</span></div><div class="line"><span class="comment"> *  结果</span></div><div class="line"><span class="comment"> *      1   2       prev  curr</span></div><div class="line"><span class="comment"> *      3   3       上一个prev+curr作为这次的prev</span></div><div class="line"><span class="comment"> *      6   4</span></div><div class="line"><span class="comment"> *      10  5</span></div><div class="line"><span class="comment"> *      15</span></div><div class="line"><span class="comment"> *      实际上执行了三次第一次不算执行</span></div><div class="line"><span class="comment"> */</span></div><div class="line"></div><div class="line"><span class="comment">// 实现的原理</span></div><div class="line"></div><div class="line"><span class="built_in">Array</span>.prototype.myReduce = <span class="function"><span class="keyword">function</span>(<span class="params">fn, initialValue</span>) </span>&#123;</div><div class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.length === <span class="number">0</span>) &#123;</div><div class="line">        <span class="keyword">if</span> (initialValue === <span class="literal">undefined</span>) &#123;</div><div class="line">            <span class="built_in">console</span>.error(<span class="string">"reduce of empty array with no initialValue"</span>)</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">return</span> initialValue</div><div class="line">        &#125;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">var</span> prev = initialValue !== <span class="literal">undefined</span> ? initialValue : <span class="keyword">this</span>[<span class="number">0</span>]</div><div class="line">        <span class="keyword">var</span> startIndex = initialValue !== <span class="literal">undefined</span> ? <span class="number">0</span> : <span class="number">1</span></div><div class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = startIndex; i &lt; <span class="keyword">this</span>.length; i++) &#123;</div><div class="line">            prev = fn(prev, <span class="keyword">this</span>[i])</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> prev</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> ret = arr.myReduce(<span class="function"><span class="keyword">function</span>(<span class="params">prev, curr</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> prev + curr</div><div class="line">&#125;, <span class="number">5</span>)</div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(ret)</div></pre></td></tr></table></figure>
 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//  user里所有age的和</span></div><div class="line"><span class="keyword">var</span> user = [</div><div class="line">    &#123; <span class="attr">name</span>: <span class="string">'小明'</span>, <span class="attr">age</span>: <span class="number">13</span> &#125;,</div><div class="line">    &#123; <span class="attr">name</span>: <span class="string">'李雷'</span>, <span class="attr">age</span>: <span class="number">15</span> &#125;,</div><div class="line">    &#123; <span class="attr">name</span>: <span class="string">'张三'</span>, <span class="attr">age</span>: <span class="number">15</span> &#125;,</div><div class="line">    &#123; <span class="attr">name</span>: <span class="string">'小花'</span>, <span class="attr">age</span>: <span class="number">17</span> &#125;</div><div class="line">]</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">var</span> sumsAge = user.reduce(<span class="function"><span class="keyword">function</span>(<span class="params">prev, curr</span>) </span>&#123;</div><div class="line">    <span class="comment">// 下一行的prev是不能.age的 因为prev是上一个prev和curr的和 数字是.不了age的 所以会报错</span></div><div class="line">    <span class="keyword">return</span> prev + curr.age</div><div class="line">&#125;, <span class="number">0</span>)</div><div class="line"><span class="comment">// 这个0是指定prev的初始值</span></div><div class="line"><span class="built_in">console</span>.log(sumsAge);</div></pre></td></tr></table></figure>
 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 把user里的数据放到数组里</span></div><div class="line"><span class="built_in">console</span>.log(user.reduce(<span class="function"><span class="keyword">function</span>(<span class="params">prev, curr</span>) </span>&#123;</div><div class="line">    <span class="comment">// console.log(prev, curr)</span></div><div class="line">    prev.push(&#123;</div><div class="line">        name: curr.name,</div><div class="line">        age: curr.age</div><div class="line">    &#125;)</div><div class="line">    <span class="keyword">return</span> prev</div><div class="line">&#125;, []))</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id=""><a href="#" class="headerlink" title=""></a><the rest="" of="" contents="" |="" more=""></the></h2>]]></content>
      
        
        <tags>
            
            <tag> reduce </tag>
            
            <tag> forEach </tag>
            
            <tag> some </tag>
            
            <tag> every </tag>
            
            <tag> filter </tag>
            
            <tag> map </tag>
            
            <tag> includes </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[vue-bs留言板]]></title>
      <url>/2017/10/14/vue-bs%E7%95%99%E8%A8%80%E6%9D%BF/</url>
      <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""><br><a id="more"></a><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html lang=<span class="string">"en"</span>&gt;</div><div class="line"></div><div class="line"></div><div class="line">&lt;head&gt;</div><div class="line">    &lt;meta charset=<span class="string">"UTF-8"</span> /&gt;</div><div class="line">    &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"bootstrap.min.css"</span>&gt;</div><div class="line">    &lt;script src=<span class="string">"jquery-1.7.2.js"</span>&gt;&lt;/script&gt;</div><div class="line">    &lt;script src=<span class="string">"bootstrap.js"</span>&gt;&lt;/script&gt;</div><div class="line">    &lt;script src=<span class="string">"vue.js"</span>&gt;&lt;/script&gt;</div><div class="line">    &lt;title&gt;bootstrap+vue简易留言板&lt;<span class="regexp">/title&gt;</span></div><div class="line"><span class="regexp">    &lt;script&gt;</span></div><div class="line"><span class="regexp">    window.onload = function(arguments) &#123;</span></div><div class="line"><span class="regexp">        new Vue(&#123;</span></div><div class="line"><span class="regexp">            el: '#box',</span></div><div class="line"><span class="regexp">            data: &#123;</span></div><div class="line"><span class="regexp">                myData:[],</span></div><div class="line"><span class="regexp">                username:'',</span></div><div class="line"><span class="regexp">                age:'',</span></div><div class="line"><span class="regexp">                nowIndex: -100</span></div><div class="line"><span class="regexp">            &#125;,</span></div><div class="line"><span class="regexp">            methods:&#123;</span></div><div class="line"><span class="regexp">                add:function () &#123;</span></div><div class="line"><span class="regexp">                    this.myData.push(&#123;</span></div><div class="line"><span class="regexp">                        name:this.username,</span></div><div class="line"><span class="regexp">                        age:this.age</span></div><div class="line"><span class="regexp">                    &#125;)</span></div><div class="line"><span class="regexp">                    this.username = '';</span></div><div class="line"><span class="regexp">                    this.age = '';</span></div><div class="line"><span class="regexp">                &#125;,</span></div><div class="line"><span class="regexp">                deleteMsg:function (n) &#123;</span></div><div class="line"><span class="regexp">                    if (n == -2) &#123;</span></div><div class="line"><span class="regexp">                        this.myData=[];</span></div><div class="line"><span class="regexp">                    &#125; else &#123;</span></div><div class="line"><span class="regexp">                       this.myData.splice(n,1);</span></div><div class="line"><span class="regexp">                    &#125;</span></div><div class="line"><span class="regexp">                &#125;</span></div><div class="line"><span class="regexp">            &#125;</span></div><div class="line"><span class="regexp">        &#125;)</span></div><div class="line"><span class="regexp">    &#125;</span></div><div class="line"><span class="regexp">    &lt;/</span>script&gt;</div><div class="line">&lt;<span class="regexp">/head&gt;</span></div><div class="line"><span class="regexp"></span></div><div class="line"><span class="regexp"></span></div><div class="line"><span class="regexp">&lt;body&gt;</span></div><div class="line"><span class="regexp">    &lt;div class="container" id="box"&gt;</span></div><div class="line"><span class="regexp">        &lt;form action="" role="form"&gt;</span></div><div class="line"><span class="regexp">            &lt;div class="form-group"&gt;</span></div><div class="line"><span class="regexp">                &lt;label for="username"&gt;</span></div><div class="line"><span class="regexp">                    用户名：</span></div><div class="line"><span class="regexp">                &lt;/</span>label&gt;</div><div class="line">                &lt;input v-model=<span class="string">"username"</span> type=<span class="string">"text"</span> id=<span class="string">"username"</span> placeholder=<span class="string">"请输入用户名"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span>&gt;</div><div class="line">            &lt;<span class="regexp">/div&gt;</span></div><div class="line"><span class="regexp">            &lt;div class="form-group"&gt;</span></div><div class="line"><span class="regexp">                &lt;label for="age"&gt;</span></div><div class="line"><span class="regexp">                    年　龄：</span></div><div class="line"><span class="regexp">                &lt;/</span>label&gt;</div><div class="line">                &lt;input v-model=<span class="string">"age"</span> type=<span class="string">"text"</span> id=<span class="string">"age"</span> placeholder=<span class="string">"请输入年龄"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span>&gt;</div><div class="line">            &lt;<span class="regexp">/div&gt;</span></div><div class="line"><span class="regexp">            &lt;div class="form-group"&gt;</span></div><div class="line"><span class="regexp">                &lt;input v-on:click="add()" type="button" name="" value="添加" class="btn btn-primary"&gt;</span></div><div class="line"><span class="regexp">                &lt;input type="reset" name="" value="重置" class="btn btn-danger"&gt;</span></div><div class="line"><span class="regexp">            &lt;/</span>div&gt;</div><div class="line">        &lt;<span class="regexp">/form&gt;</span></div><div class="line"><span class="regexp">        &lt;hr&gt;</span></div><div class="line"><span class="regexp">        &lt;table class="table table-bordered table-hover"&gt;</span></div><div class="line"><span class="regexp">            &lt;caption class="text-success"&gt;</span></div><div class="line"><span class="regexp">                &lt;h4&gt;用户信息表&lt;/</span>h4&gt;&lt;/caption&gt;</div><div class="line">            &lt;thead&gt;</div><div class="line">                &lt;tr <span class="class"><span class="keyword">class</span></span>=<span class="string">"text-info"</span>&gt;</div><div class="line">                    &lt;th <span class="class"><span class="keyword">class</span></span>=<span class="string">"text-center"</span>&gt;序号&lt;<span class="regexp">/th&gt;</span></div><div class="line"><span class="regexp">                    &lt;th class="text-center"&gt;名字&lt;/</span>th&gt;</div><div class="line">                    &lt;th <span class="class"><span class="keyword">class</span></span>=<span class="string">"text-center"</span>&gt;年龄&lt;<span class="regexp">/th&gt;</span></div><div class="line"><span class="regexp">                    &lt;th class="text-center"&gt;操作&lt;/</span>th&gt;</div><div class="line">                &lt;<span class="regexp">/tr&gt;</span></div><div class="line"><span class="regexp">            &lt;/</span>thead&gt;</div><div class="line">            &lt;tbody&gt;</div><div class="line">                &lt;tr v-<span class="keyword">for</span>=<span class="string">"item in myData"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"text-warning text-center"</span> &gt;</div><div class="line">                    &lt;td style=<span class="string">"vertical-align:middle"</span>&gt;&#123;&#123;$index + <span class="number">1</span>&#125;&#125;&lt;<span class="regexp">/td&gt;</span></div><div class="line"><span class="regexp">                    &lt;td style="vertical-align:middle"&gt;&#123;&#123;item.name&#125;&#125;&lt;/</span>td&gt;</div><div class="line">                    &lt;td style=<span class="string">"vertical-align:middle"</span>&gt;&#123;&#123;item.age&#125;&#125;&lt;<span class="regexp">/td&gt;</span></div><div class="line"><span class="regexp">                    &lt;td class="text-center"&gt;</span></div><div class="line"><span class="regexp">                        &lt;button class="btn btn-primary btn-sm"&gt;添加&lt;/</span>button&gt;</div><div class="line">                        &lt;button v-on:click=<span class="string">"nowIndex = $index"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-danger btn-sm"</span> data-toggle=<span class="string">"modal"</span> data-target=<span class="string">"#layer"</span>&gt;删除&lt;<span class="regexp">/button&gt;</span></div><div class="line"><span class="regexp">                    &lt;/</span>td&gt;</div><div class="line">                &lt;<span class="regexp">/tr&gt;</span></div><div class="line"><span class="regexp">                &lt;tr&gt;</span></div><div class="line"><span class="regexp">                    &lt;td v-show="myData.length != 0" colspan="4" class="text-right"&gt;</span></div><div class="line"><span class="regexp">                        &lt;button class="btn btn-danger" data-toggle="modal" data-target="#layer" v-on:click="nowIndex = -2"&gt;全部删除&lt;/</span>button&gt;</div><div class="line">                    &lt;<span class="regexp">/td&gt;</span></div><div class="line"><span class="regexp">                &lt;/</span>tr&gt;</div><div class="line">                &lt;tr v-show=<span class="string">"myData.length == 0"</span>&gt;</div><div class="line">                    &lt;td colspan=<span class="string">"4"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"text-center text-muted"</span>&gt;</div><div class="line">                        &lt;p&gt;暂无数据。。&lt;<span class="regexp">/p&gt;</span></div><div class="line"><span class="regexp">                    &lt;/</span>td&gt;</div><div class="line">                &lt;<span class="regexp">/tr&gt;</span></div><div class="line"><span class="regexp">            &lt;/</span>tbody&gt;</div><div class="line">        &lt;<span class="regexp">/table&gt;</span></div><div class="line"><span class="regexp">        &lt;!-- 模态框 --&gt;</span></div><div class="line"><span class="regexp">        &lt;div role="dialog" class="modal fade bs-example-modal-sm" id="layer"&gt;</span></div><div class="line"><span class="regexp">            &lt;div class="modal-dialog"&gt;</span></div><div class="line"><span class="regexp">                &lt;div class="modal-content"&gt;</span></div><div class="line"><span class="regexp">                    &lt;div class="modal-header"&gt;</span></div><div class="line"><span class="regexp">                        &lt;button type="button" class="close" data-dismiss="modal"&gt;</span></div><div class="line"><span class="regexp">                            &lt;span&gt;×&lt;/</span>span&gt;</div><div class="line">                        &lt;<span class="regexp">/button&gt;</span></div><div class="line"><span class="regexp">                        &lt;h4 class="modal-title"&gt;确认删除么?&lt;/</span>h4&gt;</div><div class="line">                    &lt;<span class="regexp">/div&gt;</span></div><div class="line"><span class="regexp">                    &lt;div class="modal-body text-right"&gt;</span></div><div class="line"><span class="regexp">                        &lt;button class="btn btn-danger btn-sm" data-dismiss="modal"&gt;取消&lt;/</span>button&gt;</div><div class="line">                        &lt;button v-on:click = <span class="string">"deleteMsg(nowIndex)"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-primary btn-primary btn-sm"</span> data-dismiss=<span class="string">"modal"</span>&gt;确定&lt;<span class="regexp">/button&gt;</span></div><div class="line"><span class="regexp">                    &lt;/</span>div&gt;</div><div class="line">                &lt;<span class="regexp">/div&gt;</span></div><div class="line"><span class="regexp">            &lt;/</span>div&gt;</div><div class="line">        &lt;<span class="regexp">/div&gt;</span></div><div class="line"><span class="regexp">    &lt;/</span>div&gt;</div><div class="line">&lt;<span class="regexp">/body&gt;</span></div><div class="line"><span class="regexp">&lt;/</span>html&gt;</div></pre></td></tr></table></figure></excerpt></p>
<h3 id="vue-bootstrap简易留言板的使用-基本语法挺简单的"><a href="#vue-bootstrap简易留言板的使用-基本语法挺简单的" class="headerlink" title="vue+bootstrap简易留言板的使用  基本语法挺简单的"></a>vue+bootstrap简易留言板的使用  基本语法挺简单的</h3><h2 id=""><a href="#" class="headerlink" title=""></a><the rest="" of="" contents="" |="" more=""></the></h2>]]></content>
      
        
        <tags>
            
            <tag> vue </tag>
            
            <tag> boostrap </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[git基本配置和使用]]></title>
      <url>/2017/10/14/git%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""></excerpt></p>
<ul>
<li>git基本配置和使用<a id="more"></a></li>
<li><p>git配置</p>
<ul>
<li>首先看自己电脑是否有.ssh文件夹 如果没有的话 ssh-keygen 会自动创建这个文件夹当然这一步应该可以省略 进入下一步哈  配置邮箱和账户名当然这个账户和密码设置的高大上一些 因为以后还是要用的</li>
<li>个人比较推荐gmail或者163的邮箱，当然gmail会相对比较麻烦一些，因为需要翻墙 翻墙软件也很常见 例如蓝灯 具体蓝灯怎么下载我就不一一说了，我想说的是github还是比较万能的哈</li>
<li>废话不多说开始第一步</li>
<li><p>1.配置邮箱和账户名</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git config --global user.name <span class="string">"xxx"</span></div><div class="line">$ git config --global user.email <span class="string">"xxx"</span></div></pre></td></tr></table></figure>
</li>
<li><p>这个命令可以查看当前配置的具体信息</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git config --global  --list</div></pre></td></tr></table></figure>
</li>
<li><p>2.输入一下命令生成ssh秘钥</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh-keygen -t rsa -C “xxx”</div></pre></td></tr></table></figure>
</li>
<li><p>3.配置github的ssh 输入一下命令复制粘贴即可</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cat ~/.ssh/id_rsa.pub</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<ul>
<li>复制成功之后打开github上的setting配置 找到ssh并且输入keygen内容，这样git就配置成功了哈 很简单</li>
</ul>
<ul>
<li>git基本配置<ul>
<li>git status：查看修改了那些文件  git log看看提交的基本信息 例如谁提交了这个版本 还有对应的版本号等</li>
<li>git pull： 把远程分支的代码拉去到本地</li>
<li>git fetch + git merge： 合并代码用到的命令 简单来说相当于 git pull</li>
<li>git commit：把修改的代码提交到本地 并提交这次代码的具体信息详请</li>
<li>git push： 把本地修改好的代码提交到远程分支上 也就是所说的github上</li>
<li>git log： 查看提交的版本号以及版本信息 谁提交了什么 在什么时间提交等等</li>
<li>git revert： 回滚到具体版本 具体的使用方法就是git log 查看你要回滚到的版本 并且执行 git revert</li>
<li>基本的配置就说到这里，如有不明白或者批评指正的请留言联系我~<the rest="" of="" contents="" |="" more="">
</the></li>
</ul>
</li>
</ul>
<hr>
]]></content>
      
        
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
            <tag> 基本配置 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2017/10/12/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
    </entry>
    
  
  
</search>
